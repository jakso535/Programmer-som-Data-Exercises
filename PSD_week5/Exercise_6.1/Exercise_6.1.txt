module ParseAndRunHigher

open HigherFun;;

let fromString = Parse.fromString;;

let eval = HigherFun.eval;;

let run e = eval e [];;

(* Examples of higher-order programs, in concrete syntax *)

let ex1 = 
    Parse.fromString
    @"let add x = let f y = x+y in f end
        in add 2 5 end"

let ex2 =
    Parse.fromString
    @"let add x = let f y = x+y in f end
      in let addtwo = add 2
        in addtwo 5 end
      end"

let ex3 = 
    Parse.fromString
    @"let add x = let f y = x+y in f end
      in let addtwo = add 2
        in let x = 77 in addtwo 5 end
        end
      end"

let ex4 =
    Parse.fromString
    @"let add x = let f y = x+y in f end
      in add 2 end"

----------------------------------------------

run (fromString ex1);;
run (fromString ex2);;
run (fromString ex3);;
run (fromString ex4);;

----------------------------------------------

Is the result of the third one as expected?

Yes it is, since the scope "let x = 77" is never used, 
so the final operation ends up being 2 + 5.

----------------------------------------------

Explain the result of the last one:

Since only x has been bound, the function f y is waiting for a variable, 
resulting in a closure expecting the free variable y to be bound.
